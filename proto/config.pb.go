// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	config.proto

It has these top-level messages:
	ChangeSet
	ConfigSet
	ChangeLog
	CreateRequest
	CreateResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	ReadRequest
	ReadResponse
	SearchRequest
	SearchResponse
	WatchRequest
	WatchResponse
	AuditLogRequest
	AuditLogResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type ChangeSet struct {
	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Data      string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Checksum  string `protobuf:"bytes,3,opt,name=checksum" json:"checksum,omitempty"`
	Source    string `protobuf:"bytes,4,opt,name=source" json:"source,omitempty"`
	Format    string `protobuf:"bytes,5,opt,name=format" json:"format,omitempty"`
}

func (m *ChangeSet) Reset()                    { *m = ChangeSet{} }
func (m *ChangeSet) String() string            { return proto1.CompactTextString(m) }
func (*ChangeSet) ProtoMessage()               {}
func (*ChangeSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ChangeSet) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ChangeSet) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *ChangeSet) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

func (m *ChangeSet) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *ChangeSet) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

type ConfigSet struct {
	Name      string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path      string     `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Version   string     `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	Comment   string     `protobuf:"bytes,4,opt,name=comment" json:"comment,omitempty"`
	CreatedAt int64      `protobuf:"varint,5,opt,name=createdAt" json:"createdAt,omitempty"`
	UpdatedAt int64      `protobuf:"varint,6,opt,name=updatedAt" json:"updatedAt,omitempty"`
	Status    int32      `protobuf:"varint,7,opt,name=status" json:"status,omitempty"`
	ChangeSet *ChangeSet `protobuf:"bytes,8,opt,name=change_set,json=changeSet" json:"change_set,omitempty"`
}

func (m *ConfigSet) Reset()                    { *m = ConfigSet{} }
func (m *ConfigSet) String() string            { return proto1.CompactTextString(m) }
func (*ConfigSet) ProtoMessage()               {}
func (*ConfigSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ConfigSet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfigSet) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ConfigSet) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ConfigSet) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ConfigSet) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ConfigSet) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ConfigSet) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ConfigSet) GetChangeSet() *ChangeSet {
	if m != nil {
		return m.ChangeSet
	}
	return nil
}

type ChangeLog struct {
	Action    string     `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	ConfigSet *ConfigSet `protobuf:"bytes,2,opt,name=configSet" json:"configSet,omitempty"`
}

func (m *ChangeLog) Reset()                    { *m = ChangeLog{} }
func (m *ChangeLog) String() string            { return proto1.CompactTextString(m) }
func (*ChangeLog) ProtoMessage()               {}
func (*ChangeLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ChangeLog) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ChangeLog) GetConfigSet() *ConfigSet {
	if m != nil {
		return m.ConfigSet
	}
	return nil
}

type CreateRequest struct {
	ConfigSet *ConfigSet `protobuf:"bytes,1,opt,name=configSet" json:"configSet,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateRequest) GetConfigSet() *ConfigSet {
	if m != nil {
		return m.ConfigSet
	}
	return nil
}

type CreateResponse struct {
	Resp int32 `protobuf:"varint,1,opt,name=resp" json:"resp,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto1.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateResponse) GetResp() int32 {
	if m != nil {
		return m.Resp
	}
	return 0
}

type UpdateRequest struct {
	ConfigSet *ConfigSet `protobuf:"bytes,1,opt,name=configSet" json:"configSet,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateRequest) GetConfigSet() *ConfigSet {
	if m != nil {
		return m.ConfigSet
	}
	return nil
}

type UpdateResponse struct {
	Resp int32 `protobuf:"varint,1,opt,name=resp" json:"resp,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto1.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateResponse) GetResp() int32 {
	if m != nil {
		return m.Resp
	}
	return 0
}

type DeleteRequest struct {
	ConfigSet *ConfigSet `protobuf:"bytes,1,opt,name=configSet" json:"configSet,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteRequest) GetConfigSet() *ConfigSet {
	if m != nil {
		return m.ConfigSet
	}
	return nil
}

type DeleteResponse struct {
	Resp int32 `protobuf:"varint,1,opt,name=resp" json:"resp,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteResponse) GetResp() int32 {
	if m != nil {
		return m.Resp
	}
	return 0
}

type ReadRequest struct {
	Name       string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Version    string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	DelInclude bool   `protobuf:"varint,4,opt,name=delInclude" json:"delInclude,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto1.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ReadRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReadRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ReadRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ReadRequest) GetDelInclude() bool {
	if m != nil {
		return m.DelInclude
	}
	return false
}

type ReadResponse struct {
	Resp      int32      `protobuf:"varint,1,opt,name=resp" json:"resp,omitempty"`
	ConfigSet *ConfigSet `protobuf:"bytes,2,opt,name=configSet" json:"configSet,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto1.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ReadResponse) GetResp() int32 {
	if m != nil {
		return m.Resp
	}
	return 0
}

func (m *ReadResponse) GetConfigSet() *ConfigSet {
	if m != nil {
		return m.ConfigSet
	}
	return nil
}

type SearchRequest struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path    string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	Status  int32  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	Limit   int64  `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	Offset  int64  `protobuf:"varint,6,opt,name=offset" json:"offset,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto1.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SearchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *SearchRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *SearchRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type SearchResponse struct {
	Resp    int32        `protobuf:"varint,1,opt,name=resp" json:"resp,omitempty"`
	Configs []*ConfigSet `protobuf:"bytes,2,rep,name=configs" json:"configs,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto1.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SearchResponse) GetResp() int32 {
	if m != nil {
		return m.Resp
	}
	return 0
}

func (m *SearchResponse) GetConfigs() []*ConfigSet {
	if m != nil {
		return m.Configs
	}
	return nil
}

type WatchRequest struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path    string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
}

func (m *WatchRequest) Reset()                    { *m = WatchRequest{} }
func (m *WatchRequest) String() string            { return proto1.CompactTextString(m) }
func (*WatchRequest) ProtoMessage()               {}
func (*WatchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *WatchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WatchRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *WatchRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type WatchResponse struct {
	Name      string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path      string     `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Version   string     `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	Status    int32      `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	ChangeSet *ChangeSet `protobuf:"bytes,5,opt,name=changeSet" json:"changeSet,omitempty"`
}

func (m *WatchResponse) Reset()                    { *m = WatchResponse{} }
func (m *WatchResponse) String() string            { return proto1.CompactTextString(m) }
func (*WatchResponse) ProtoMessage()               {}
func (*WatchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *WatchResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WatchResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *WatchResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *WatchResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *WatchResponse) GetChangeSet() *ChangeSet {
	if m != nil {
		return m.ChangeSet
	}
	return nil
}

type AuditLogRequest struct {
	// from unix timestamp
	From int64 `protobuf:"varint,1,opt,name=from" json:"from,omitempty"`
	// to unix timestamp
	To int64 `protobuf:"varint,2,opt,name=to" json:"to,omitempty"`
	// limit number items
	Limit int64 `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	// the offset
	Offset int64 `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	// reverse the order
	Reverse bool `protobuf:"varint,5,opt,name=reverse" json:"reverse,omitempty"`
}

func (m *AuditLogRequest) Reset()                    { *m = AuditLogRequest{} }
func (m *AuditLogRequest) String() string            { return proto1.CompactTextString(m) }
func (*AuditLogRequest) ProtoMessage()               {}
func (*AuditLogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *AuditLogRequest) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *AuditLogRequest) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *AuditLogRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AuditLogRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AuditLogRequest) GetReverse() bool {
	if m != nil {
		return m.Reverse
	}
	return false
}

type AuditLogResponse struct {
	Resp    int32        `protobuf:"varint,1,opt,name=resp" json:"resp,omitempty"`
	Changes []*ChangeLog `protobuf:"bytes,2,rep,name=changes" json:"changes,omitempty"`
}

func (m *AuditLogResponse) Reset()                    { *m = AuditLogResponse{} }
func (m *AuditLogResponse) String() string            { return proto1.CompactTextString(m) }
func (*AuditLogResponse) ProtoMessage()               {}
func (*AuditLogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *AuditLogResponse) GetResp() int32 {
	if m != nil {
		return m.Resp
	}
	return 0
}

func (m *AuditLogResponse) GetChanges() []*ChangeLog {
	if m != nil {
		return m.Changes
	}
	return nil
}

func init() {
	proto1.RegisterType((*ChangeSet)(nil), "proto.ChangeSet")
	proto1.RegisterType((*ConfigSet)(nil), "proto.ConfigSet")
	proto1.RegisterType((*ChangeLog)(nil), "proto.ChangeLog")
	proto1.RegisterType((*CreateRequest)(nil), "proto.CreateRequest")
	proto1.RegisterType((*CreateResponse)(nil), "proto.CreateResponse")
	proto1.RegisterType((*UpdateRequest)(nil), "proto.UpdateRequest")
	proto1.RegisterType((*UpdateResponse)(nil), "proto.UpdateResponse")
	proto1.RegisterType((*DeleteRequest)(nil), "proto.DeleteRequest")
	proto1.RegisterType((*DeleteResponse)(nil), "proto.DeleteResponse")
	proto1.RegisterType((*ReadRequest)(nil), "proto.ReadRequest")
	proto1.RegisterType((*ReadResponse)(nil), "proto.ReadResponse")
	proto1.RegisterType((*SearchRequest)(nil), "proto.SearchRequest")
	proto1.RegisterType((*SearchResponse)(nil), "proto.SearchResponse")
	proto1.RegisterType((*WatchRequest)(nil), "proto.WatchRequest")
	proto1.RegisterType((*WatchResponse)(nil), "proto.WatchResponse")
	proto1.RegisterType((*AuditLogRequest)(nil), "proto.AuditLogRequest")
	proto1.RegisterType((*AuditLogResponse)(nil), "proto.AuditLogResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Config service

type ConfigClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	AuditLog(ctx context.Context, in *AuditLogRequest, opts ...grpc.CallOption) (*AuditLogResponse, error)
	Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (Config_WatchClient, error)
}

type configClient struct {
	cc *grpc.ClientConn
}

func NewConfigClient(cc *grpc.ClientConn) ConfigClient {
	return &configClient{cc}
}

func (c *configClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/proto.Config/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := grpc.Invoke(ctx, "/proto.Config/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := grpc.Invoke(ctx, "/proto.Config/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc.Invoke(ctx, "/proto.Config/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := grpc.Invoke(ctx, "/proto.Config/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) AuditLog(ctx context.Context, in *AuditLogRequest, opts ...grpc.CallOption) (*AuditLogResponse, error) {
	out := new(AuditLogResponse)
	err := grpc.Invoke(ctx, "/proto.Config/AuditLog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) Watch(ctx context.Context, in *WatchRequest, opts ...grpc.CallOption) (Config_WatchClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Config_serviceDesc.Streams[0], c.cc, "/proto.Config/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &configWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Config_WatchClient interface {
	Recv() (*WatchResponse, error)
	grpc.ClientStream
}

type configWatchClient struct {
	grpc.ClientStream
}

func (x *configWatchClient) Recv() (*WatchResponse, error) {
	m := new(WatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Config service

type ConfigServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
	AuditLog(context.Context, *AuditLogRequest) (*AuditLogResponse, error)
	Watch(*WatchRequest, Config_WatchServer) error
}

func RegisterConfigServer(s *grpc.Server, srv ConfigServer) {
	s.RegisterService(&_Config_serviceDesc, srv)
}

func _Config_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Config/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Config_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Config/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Config_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Config/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Config_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Config/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Config_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Config/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Config_AuditLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuditLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).AuditLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Config/AuditLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).AuditLog(ctx, req.(*AuditLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Config_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ConfigServer).Watch(m, &configWatchServer{stream})
}

type Config_WatchServer interface {
	Send(*WatchResponse) error
	grpc.ServerStream
}

type configWatchServer struct {
	grpc.ServerStream
}

func (x *configWatchServer) Send(m *WatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Config_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Config",
	HandlerType: (*ConfigServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Config_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Config_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Config_Delete_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Config_Search_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _Config_Read_Handler,
		},
		{
			MethodName: "AuditLog",
			Handler:    _Config_AuditLog_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _Config_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "config.proto",
}

func init() { proto1.RegisterFile("config.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 662 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4f, 0x6f, 0xd3, 0x30,
	0x14, 0x5f, 0x9a, 0xa4, 0x6b, 0xde, 0xda, 0x32, 0x99, 0x32, 0xa2, 0x0a, 0xa1, 0x2a, 0xe2, 0x50,
	0x71, 0x28, 0x30, 0x24, 0x38, 0x21, 0x34, 0x8d, 0x0b, 0xd2, 0x0e, 0x93, 0x2b, 0xc4, 0x11, 0x19,
	0xc7, 0x6d, 0x23, 0x9a, 0xb8, 0x24, 0x0e, 0x37, 0x3e, 0x00, 0x5f, 0x00, 0xc4, 0x77, 0xe4, 0x43,
	0x20, 0xdb, 0xb1, 0x93, 0x6c, 0xa3, 0x15, 0xea, 0x76, 0xb2, 0xdf, 0xf3, 0xfb, 0xf3, 0x7b, 0x7f,
	0xfc, 0x83, 0x3e, 0xe5, 0xd9, 0x22, 0x59, 0xce, 0x36, 0x39, 0x17, 0x1c, 0xf9, 0xea, 0x88, 0x7e,
	0x38, 0x10, 0x9c, 0xaf, 0x48, 0xb6, 0x64, 0x73, 0x26, 0xd0, 0x23, 0x08, 0x44, 0x92, 0xb2, 0x42,
	0x90, 0x74, 0x13, 0x3a, 0x13, 0x67, 0xea, 0xe2, 0x5a, 0x81, 0x10, 0x78, 0x31, 0x11, 0x24, 0xec,
	0x4c, 0x9c, 0x69, 0x80, 0xd5, 0x1d, 0x8d, 0xa1, 0x47, 0x57, 0x8c, 0x7e, 0x29, 0xca, 0x34, 0x74,
	0x95, 0xde, 0xca, 0xe8, 0x04, 0xba, 0x05, 0x2f, 0x73, 0xca, 0x42, 0x4f, 0xbd, 0x54, 0x92, 0xd4,
	0x2f, 0x78, 0x9e, 0x12, 0x11, 0xfa, 0x5a, 0xaf, 0xa5, 0xe8, 0x8f, 0xc4, 0xa2, 0x30, 0x4a, 0x2c,
	0x08, 0xbc, 0x8c, 0xa4, 0x4c, 0xc1, 0x08, 0xb0, 0xba, 0x4b, 0xdd, 0x86, 0x88, 0x95, 0x41, 0x20,
	0xef, 0x28, 0x84, 0xc3, 0x6f, 0x2c, 0x2f, 0x12, 0x9e, 0x55, 0x00, 0x8c, 0x28, 0x5f, 0x28, 0x4f,
	0x53, 0x96, 0x89, 0x0a, 0x80, 0x11, 0x65, 0x9d, 0x34, 0x67, 0x44, 0xb0, 0xf8, 0x4c, 0x83, 0x70,
	0x71, 0xad, 0x90, 0xaf, 0xe5, 0x26, 0xae, 0x5e, 0xbb, 0xfa, 0xd5, 0x2a, 0x54, 0x55, 0x82, 0x88,
	0xb2, 0x08, 0x0f, 0x27, 0xce, 0xd4, 0xc7, 0x95, 0x84, 0x9e, 0x01, 0x50, 0xd5, 0xc8, 0x4f, 0x05,
	0x13, 0x61, 0x6f, 0xe2, 0x4c, 0x8f, 0x4e, 0x8f, 0x75, 0xb3, 0x67, 0xb6, 0xc3, 0x38, 0xa0, 0xe6,
	0x1a, 0xcd, 0x4d, 0xe7, 0x2f, 0xf8, 0x52, 0x46, 0x25, 0x54, 0xc8, 0x22, 0x74, 0xbd, 0x95, 0x84,
	0x66, 0x10, 0x50, 0xd3, 0x12, 0x55, 0x76, 0x23, 0xa8, 0xd1, 0xe3, 0xda, 0x24, 0x7a, 0x0b, 0x83,
	0x73, 0x55, 0x08, 0x66, 0x5f, 0x4b, 0x56, 0x88, 0x76, 0x00, 0x67, 0x77, 0x80, 0x27, 0x30, 0x34,
	0x01, 0x8a, 0x0d, 0xcf, 0x0a, 0xd5, 0xf4, 0x9c, 0x15, 0x7a, 0x1f, 0x7c, 0xac, 0xee, 0x32, 0xcd,
	0x07, 0xd5, 0x91, 0x3d, 0xd2, 0x98, 0x00, 0xdb, 0xd3, 0xbc, 0x63, 0x6b, 0xb6, 0x57, 0x1a, 0x13,
	0x60, 0x4b, 0x1a, 0x0e, 0x47, 0x98, 0x91, 0xd8, 0x24, 0xd9, 0x7f, 0xf3, 0x1e, 0x03, 0xc4, 0x6c,
	0xfd, 0x3e, 0xa3, 0xeb, 0x32, 0xd6, 0xdb, 0xdf, 0xc3, 0x0d, 0x4d, 0x84, 0xa1, 0xaf, 0x13, 0xfe,
	0x1b, 0xd4, 0x7f, 0x4f, 0xfe, 0x97, 0x03, 0x83, 0x39, 0x23, 0x39, 0x5d, 0xdd, 0x5e, 0x1d, 0xf5,
	0xae, 0x7b, 0xad, 0x5d, 0x1f, 0x81, 0xbf, 0x4e, 0xd2, 0xc4, 0xfc, 0x1d, 0x2d, 0x48, 0x6b, 0xbe,
	0x58, 0xc8, 0xed, 0xd7, 0x9f, 0xa6, 0x92, 0xa2, 0x4b, 0x18, 0x1a, 0x60, 0x5b, 0xea, 0x7d, 0x2a,
	0x7f, 0xab, 0x2c, 0xa6, 0x08, 0x3b, 0x13, 0xf7, 0xc6, 0x6a, 0x8d, 0x41, 0x74, 0x09, 0xfd, 0x8f,
	0x44, 0xdc, 0x62, 0xa5, 0xd1, 0x6f, 0x07, 0x06, 0x55, 0xc8, 0x1a, 0xe3, 0x1d, 0x75, 0x4f, 0x4e,
	0xd6, 0xb0, 0x80, 0xea, 0xe0, 0x0e, 0xa2, 0xf8, 0x0e, 0xf7, 0xce, 0xca, 0x38, 0x11, 0x17, 0x7c,
	0xd9, 0x28, 0x78, 0x91, 0xf3, 0xb4, 0xe2, 0x68, 0x75, 0x47, 0x43, 0xe8, 0x08, 0xae, 0xa0, 0xb9,
	0xb8, 0x23, 0x78, 0x3d, 0x24, 0xf7, 0xe6, 0x21, 0x79, 0xcd, 0x21, 0xc9, 0x32, 0x72, 0x26, 0x91,
	0x33, 0x05, 0xa9, 0x87, 0x8d, 0x18, 0x61, 0x38, 0xae, 0xd3, 0xef, 0x18, 0xa0, 0xc2, 0x7c, 0x6d,
	0x80, 0x86, 0xe5, 0xb0, 0x31, 0x38, 0xfd, 0xe9, 0x42, 0x57, 0xcf, 0x15, 0xbd, 0x86, 0xae, 0x26,
	0x1c, 0x34, 0x32, 0xf6, 0x4d, 0x02, 0x1b, 0x3f, 0xb8, 0xa2, 0xd5, 0x08, 0xa2, 0x03, 0xe9, 0xa8,
	0x29, 0xc4, 0x3a, 0xb6, 0x28, 0xc9, 0x3a, 0xb6, 0x79, 0x46, 0x3b, 0x6a, 0x52, 0xb0, 0x8e, 0x2d,
	0x92, 0xb1, 0x8e, 0x6d, 0xe6, 0xd0, 0x8e, 0x7a, 0x91, 0xad, 0x63, 0xeb, 0xc3, 0x59, 0xc7, 0xf6,
	0xb6, 0x47, 0x07, 0xe8, 0x05, 0x78, 0xf2, 0xbf, 0x23, 0x54, 0x19, 0x34, 0xd8, 0x66, 0x7c, 0xbf,
	0xa5, 0xb3, 0x2e, 0x6f, 0xa0, 0x67, 0xba, 0x8e, 0x4e, 0x2a, 0x93, 0x2b, 0x5b, 0x30, 0x7e, 0x78,
	0x4d, 0x6f, 0xdd, 0x5f, 0x81, 0xaf, 0xd6, 0x19, 0x99, 0xf0, 0xcd, 0xff, 0x32, 0x1e, 0xb5, 0x95,
	0xc6, 0xeb, 0xb9, 0xf3, 0xb9, 0xab, 0x1e, 0x5e, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xf7, 0xff,
	0xa6, 0xa2, 0x2d, 0x08, 0x00, 0x00,
}
